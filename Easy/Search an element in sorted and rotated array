
int binarySearch(vector<int> vec, int s, int e, int K)
{
    int mid = s + (e-s)/2;
    while(s<=e)
    {
        if(vec[mid] == K)
        return mid;
        
        if(K > vec[mid])
        {
            s = mid + 1;
        }
        else
        {
            e = mid - 1;
        }
        
        mid = s + (e-s) / 2;
        
    }
    return -1;
    
}

int getPivot(vector<int> vec)
{
    int s = 0;
    int e = vec.size()-1;
    int mid = s+(e-s)/2;
    
    while(s<e)
    {
        if(vec[mid] > vec[0])
        {
            s = mid + 1;
        }
        else{
            e = mid;
        }
        mid = s + (e-s)/2;
    }
    return s;
}

int Search(vector<int> vec, int K) {
    //code here
    int pivot = getPivot(vec);
    if(K >= vec[pivot] && K <= vec[vec.size()-1])
    {
        return binarySearch(vec,pivot,vec.size()-1,K);
    }
    else{
        return binarySearch(vec,0,pivot-1,K);
    }
}
