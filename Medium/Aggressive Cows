class Solution {
public:

    bool isPossibleSol(vector<int> &stalls,int n, int k,int mid)
    {
        int cowCount = 1;
        int lastPosition = stalls[0];
        
        for(int i = 0;i<n;i++)
        {
            if(stalls[i]- lastPosition >= mid)
            {
                cowCount++;
                lastPosition = stalls[i];
                if(cowCount == k)
                {
                    return true;
                }
            }
        }
        return false;
    }

    int solve(int n, int k, vector<int> &stalls) {
    
        // Write your code here
        sort(stalls.begin(),stalls.end());
        int s = 0;
        int e = stalls[n-1];
        
        int ans = -1;
        while(s<=e)
        {
            int mid = s + (e-s)/2;
            if(isPossibleSol(stalls,n,k,mid))
            {
                ans = mid;
                s = mid + 1;
            }
            else{
                e = mid - 1;
            }
        }
        return ans;
    }
};
